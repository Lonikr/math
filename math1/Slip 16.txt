Q.1 Attempt any two of the following

(A).Write a python program to plot the function f(x,y)=-x2-y2 when -10≤x,y≤10 


import matplotlib.pyplot as plt 
import numpy as np 
def f(x, y): 
return -x**2 - y**2 
x = np.linspace(-10, 10, 100) 
y = np.linspace(-10, 10, 100) 
X, Y = np.meshgrid(x, y) 
Z = f(X, Y) 
fig = plt.figure() 
ax = fig.add_subplot(projection='3d') 
ax.plot_surface(X, Y, Z, cmap='viridis') 
ax.set_xlabel('x') 
ax.set_ylabel('y') 
ax.set_zlabel('f(x,y)') 
plt.show() 



(B).Write a python program to plot graph of the function f(x)=log(3x2) in [1,10] 
with black dashed points


import numpy as np 
def f(x): 
return np.log(3*x**2) 
x = np.linspace(1, 10, 100) 
y = f(x) 
plt.plot(x, y, 'k--') 
plt.xlabel('x') 
plt.ylabel('f(x)') 
plt.title('Graph of f(x)=log(3x^2)') 
plt.show()


(C ).Write a python program to generate plot of the function f(x)=x2 in the 
interval [-5,5] in figure of size of 6x6 inches



import matplotlib.pyplot as plt 
import numpy as np 
def f(x): 
return x**2 
x = np.linspace(-5, 5, 100) 
y = f(x) 
fig = plt.figure(figsize=(6, 6)) 
plt.plot(x, y) 
plt.xlabel('x') 
plt.ylabel('f(x)') 
plt.title('Graph of f(x)=x^2') 
plt.show() 



Q2 ) Attempt any TWO of the following


A ) Write a python program to declare the line segment passing through the points 
A(0,7) , B(5,2) . also find the length and midpoint of the line segment passing through 
points A and B 

import math 
Ax, Ay = 0, 7 
Bx, By = 5, 2 
slope = (By - Ay) / (Bx - Ax) 
y_intercept = Ay - slope * Ax 
print("Equation of the line: y = {}x + {}".format(slope, y_intercept)) 
length = math.sqrt((Bx - Ax)**2 + (By - Ay)**2) 
print("Length of the line segment: {:.2f}".format(length)) 
midpoint_x = (Ax + Bx) / 2 
midpoint_y = (Ay + By) / 2 
print("Midpoint of the line segment: ({}, {})".format(midpoint_x, midpoint_y)) 


(B) Write a python program to draw a polygon with vertices (0,0),(2,0),(2,3),(1,6) 
and rotate it by 90⸰ 


import matplotlib.pyplot as plt 
import numpy as np 
vertices = np.array([[0, 0], [2, 0], [2, 3], [1, 6]]) 
fig, ax = plt.subplots() 
polygon = plt.Polygon(vertices, color='blue') 
ax.add_patch(polygon) 
ax.set_xlim(-2, 8) 
ax.set_ylim(-2, 8) 
rotation_angle = 90 
rotation_matrix = np.array([[np.cos(np.radians(rotation_angle)), 
np.sin(np.radians(rotation_angle))], 
[np.sin(np.radians(rotation_angle)), 
np.cos(np.radians(rotation_angle))]]) 
vertices_rotated = np.dot(vertices, rotation_matrix) 
polygon_rotated = plt.Polygon(vertices_rotated, color='red') 
ax.add_patch(polygon_rotated) 
plt.show()



(C).Write a python program to generate vector x in the interval [0,15] using 
numpy package with 100 subintervals 


import numpy as np 
x_min, x_max = 0, 15 
num_intervals = 100 
x = np.linspace(x_min, x_max, num_intervals) 
print(x) 




Q 3 ) Attempt the following



A ) Attempt any ONE of the following 
i) Write a python program to solve the following LPP : 
Max  Z=5x+3y 
Subject to   3x+5y≤15 
6x+2y≥24 
X,y≥0 


import numpy as np 
from scipy.optimize import linprog 
obj = np.array([-5, -3]) 
lhs_eq = np.array([[3, 5], [-6, -2]]) 
rhs_eq = np.array([15, -24]) 
bnd = [(0, None), (0, None)] 
res = linprog(c=obj, A_eq=lhs_eq, b_eq=rhs_eq, bounds=bnd, method='simplex') 
print("x = ", res.x[0]) 
print("y = ", res.x[1]) 
print("Z = ", -res.fun)



(ii).Write a python program to solve the following LPP : 
Min Z=3.5x+2y 
Subject to x+y≥5 
x≥5 
y≤2 
x,y≥0 



import numpy as np 
from scipy.optimize import linprog 
obj = np.array([3.5, 2]) 
lhs_eq = np.array([[-1, -1], [-1, 0], [0, 1]]) 
rhs_eq = np.array([-5, -5, 2]) 
bnd = [(5, None), (0, 2)] 
res = linprog(c=obj, A_ub=lhs_eq, b_ub=rhs_eq, bounds=bnd, method='simplex') 
print("x = ", res.x[0]) 
print("y = ", res.x[1]) 
print("Z = ", res.fun)






















































